name: Build and Run Tests

env:
  VEGA_VERSION: v0.72.14

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:
jobs:
  test:
    timeout-minutes: 30
    runs-on: 8-cores
    steps:
      - uses: actions/checkout@v3
      #----------------------------------------------
      #  -----  install dependencies  -----
      #----------------------------------------------\
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          cache: "poetry"
          python-version: "3.10"
      
      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      #----------------------------------------------
      #  -----  find vega binaries path  -----
      #----------------------------------------------
      - name: Find vega binaries path
        id: vega_bin_path
        run: echo path=$(poetry run python -c "import vega_sim; print(vega_sim.vega_bin_path)") >> $GITHUB_OUTPUT
      #----------------------------------------------
      #  -----  vega binaries cache -----
      #----------------------------------------------
      - name: Vega binaries cache
        uses: actions/cache@v3
        id: vega_binaries_cache
        with:
          path: ${{ steps.vega_bin_path.outputs.path }}
          key: ${{ runner.os }}-vega-binaries-${{ env.VEGA_VERSION }}
      #----------------------------------------------
      #  -----  install vega binaries. -----
      #----------------------------------------------
      - name: Install vega binaries
        if: steps.vega_binaries_cache.outputs.cache-hit != 'true'
        run: poetry run python -m vega_sim.tools.load_binaries --force --version $VEGA_VERSION
      #----------------------------------------------
      #  -----  pull console. -----
      #----------------------------------------------
      - name: pull console
        run: |
          poetry run docker pull vegaprotocol/trading:develop
      #----------------------------------------------
      #  -----  install playwright. -----
      #----------------------------------------------
      - name: Install Playwright
        run: poetry run playwright install --with-deps chromium
      #----------------------------------------------
      #  ----- run tests. -----
      #----------------------------------------------
      - name: Run tests
        run: poetry run pytest -v -s --numprocesses 4 --dist loadfile --durations=20
      #----------------------------------------------
      #  -----  upload traces  -----
      #----------------------------------------------
      - name: Upload Playwright Trace
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-trace
          path: ./traces/
          retention-days: 15


